/*:
 # Chaining Optionals
 ---
 
 ## Topic Essentials
 There will definitely be times when we need to chain optionals, or in other words deal with unwrapping an optional value that has optional properties itself.
 
 Itâ€™s handy to think of optional chains in a very literal sense, like a chain link. If all the links are present and strong, the chain continues, but if one link fails, the chain breaks.

 
 ### Objectives
 + Create a class called **Adventurer** with an optional **equippedWeapon** property
 + Create another class called **Weapon** with a name property and simple function
 + Create an instance of **Adventurer** and use chain unwrapping to access the name of its **equippedWeapon** if it has one
 */
// Test classes

// Chain unwrapping optionals

/*:
 [Previous Topic](@previous)
 
 [Next Topic](@next)
 */
